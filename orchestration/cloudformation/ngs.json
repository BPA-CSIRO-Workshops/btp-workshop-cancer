{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This template instantiates the Bioplatforms Australia Training Platform (BTP) on Amazon AWS using the latest BTP AMI.",

  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "Default" : "0.0.0.0/0",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid IP CIDR range of the form x.x.x.x/x."
    },

    "TraineePassword" : {
      "Description" : "The password to assign the trainee user for remote access",
      "Type" : "String",
      "MinLength" : "7",
      "MaxLength" : "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "Must contain only alphanumeric characters",
      "NoEcho": "true"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"  },
      "t2.micro"    : { "Arch" : "HVM64" },
      "t2.small"    : { "Arch" : "HVM64" },
      "t2.medium"   : { "Arch" : "HVM64" },
      "m1.small"    : { "Arch" : "PV64"  },
      "m1.medium"   : { "Arch" : "PV64"  },
      "m1.large"    : { "Arch" : "PV64"  },
      "m1.xlarge"   : { "Arch" : "PV64"  },
      "m2.xlarge"   : { "Arch" : "PV64"  },
      "m2.2xlarge"  : { "Arch" : "PV64"  },
      "m2.4xlarge"  : { "Arch" : "PV64"  },
      "m3.medium"   : { "Arch" : "HVM64" },
      "m3.large"    : { "Arch" : "HVM64" },
      "m3.xlarge"   : { "Arch" : "HVM64" },
      "m3.2xlarge"  : { "Arch" : "HVM64" },
      "c1.medium"   : { "Arch" : "PV64"  },
      "c1.xlarge"   : { "Arch" : "PV64"  },
      "c3.large"    : { "Arch" : "HVM64" },
      "c3.xlarge"   : { "Arch" : "HVM64" },
      "c3.2xlarge"  : { "Arch" : "HVM64" },
      "c3.4xlarge"  : { "Arch" : "HVM64" },
      "c3.8xlarge"  : { "Arch" : "HVM64" },
      "c4.large"    : { "Arch" : "HVM64" },
      "c4.xlarge"   : { "Arch" : "HVM64" },
      "c4.2xlarge"  : { "Arch" : "HVM64" },
      "c4.4xlarge"  : { "Arch" : "HVM64" },
      "c4.8xlarge"  : { "Arch" : "HVM64" },
      "g2.2xlarge"  : { "Arch" : "HVMG2" },
      "r3.large"    : { "Arch" : "HVM64" },
      "r3.xlarge"   : { "Arch" : "HVM64" },
      "r3.2xlarge"  : { "Arch" : "HVM64" },
      "r3.4xlarge"  : { "Arch" : "HVM64" },
      "r3.8xlarge"  : { "Arch" : "HVM64" },
      "i2.xlarge"   : { "Arch" : "HVM64" },
      "i2.2xlarge"  : { "Arch" : "HVM64" },
      "i2.4xlarge"  : { "Arch" : "HVM64" },
      "i2.8xlarge"  : { "Arch" : "HVM64" },
      "d2.xlarge"   : { "Arch" : "HVM64" },
      "d2.2xlarge"  : { "Arch" : "HVM64" },
      "d2.4xlarge"  : { "Arch" : "HVM64" },
      "d2.8xlarge"  : { "Arch" : "HVM64" },
      "hi1.4xlarge" : { "Arch" : "HVM64" },
      "hs1.8xlarge" : { "Arch" : "HVM64" },
      "cr1.8xlarge" : { "Arch" : "HVM64" },
      "cc2.8xlarge" : { "Arch" : "HVM64" }
    },

    "AWSRegionArch2AMI" : {
      "ap-southeast-2" : { "PV64" : "ami-67b3c95d" }
    }

  },

  "Resources" : {
    "BTPInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ { "Ref" : "BTPSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                    { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["\n", [
                     "#!/bin/bash",
                     "# FreeNX",
                     "/usr/bin/add-apt-repository ppa:freenx-team -y",
                     "apt-get update",
                     "apt-get install -y freenx",
                     "# Set Hostname",
                     "echo \"127.0.0.1 $HOSTNAME\" | tee -a /etc/hosts",
                     "###########",
                     "# QC Module",
                     "###########",
                     "cd /tmp/",
                     "git clone https://github.com/BPA-CSIRO-Workshops/btp-module-ngs-qc.git",
                     "cd btp-module-ngs-qc",
                     "cp tools/ngs-qc-tools.yaml /etc/puppet/",
                     "cp tools/ngs-qc-tools-hiera.yaml /etc/puppet/",
                     "cp datasets/ngs-qc-data-aws.yaml /etc/puppet/",
                     "cp datasets/ngs-qc-data-hiera-aws.yaml /etc/puppet/",
                     "################",
                     "# Mapping Module",
                     "################",
                     "cd /tmp/",
                     "git clone https://github.com/BPA-CSIRO-Workshops/btp-module-ngs-mapping.git",
                     "cd btp-module-ngs-mapping",
                     "cp tools/ngs-mapping-tools.yaml /etc/puppet/",
                     "cp tools/ngs-mapping-tools-hiera.yaml /etc/puppet/",
                     "cp datasets/ngs-mapping-data-aws.yaml /etc/puppet/",
                     "cp datasets/ngs-mapping-data-hiera-aws.yaml /etc/puppet/",
                     "#################",
                     "# ChIP-Seq Module",
                     "#################",
                     "cd /tmp/",
                     "git clone https://github.com/BPA-CSIRO-Workshops/btp-module-chip-seq.git",
                     "cd btp-module-chip-seq",
                     "cp tools/ngs-chipseq-tools.yaml /etc/puppet/",
                     "cp tools/ngs-chipseq-tools-hiera.yaml /etc/puppet/",
                     "cp datasets/ngs-chipseq-data-aws.yaml /etc/puppet/",
                     "cp datasets/ngs-chipseq-data-hiera-aws.yaml /etc/puppet/",
                     "################",
                     "# RNA-Seq Module",
                     "################",
                     "cd /tmp/",
                     "git clone https://github.com/BPA-CSIRO-Workshops/btp-module-rna-seq.git",
                     "cd btp-module-rna-seq",
                     "cp tools/ngs-rnaseq-tools.yaml /etc/puppet/",
                     "cp tools/ngs-rnaseq-tools-hiera.yaml /etc/puppet/",
                     "cp datasets/ngs-rnaseq-data-aws.yaml /etc/puppet/",
                     "cp datasets/ngs-rnaseq-data-hiera-aws.yaml /etc/puppet/",
                     "################",
                     "# de novo Module",
                     "################",
                     "cd /tmp/",
                     "git clone https://github.com/BPA-CSIRO-Workshops/btp-module-velvet.git",
                     "cd btp-module-velvet",
                     "cp tools/ngs-denovo-tools.yaml /etc/puppet/",
                     "cp tools/ngs-denovo-tools-hiera.yaml /etc/puppet/",
                     "cp datasets/ngs-denovo-data-aws.yaml /etc/puppet/",
                     "cp datasets/ngs-denovo-data-hiera-aws.yaml /etc/puppet/",
                     "######################",
                     "# Apply Puppet Modules",
                     "######################",
                     "puppet apply --verbose --parser future /tmp/btp-module-ngs-qc/tools/btp.pp --hiera_config=/etc/puppet/ngs-qc-tools-hiera.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-ngs-mapping/tools/btp.pp --hiera_config=/etc/puppet/ngs-mapping-tools-hiera.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-chip-seq/tools/btp.pp --hiera_config=/etc/puppet/ngs-chipseq-tools-hiera.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-rna-seq/tools/btp.pp --hiera_config=/etc/puppet/ngs-rnaseq-tools-hiera.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-velvet/tools/btp.pp --hiera_config=/etc/puppet/ngs-denovo-tools-hiera.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-ngs-qc/datasets/btp.pp --hiera_config=/etc/puppet/ngs-qc-data-hiera-aws.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-ngs-mapping/datasets/btp.pp --hiera_config=/etc/puppet/ngs-mapping-data-hiera-aws.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-chip-seq/datasets/btp.pp --hiera_config=/etc/puppet/ngs-chipseq-data-hiera-aws.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-rna-seq/datasets/btp.pp --hiera_config=/etc/puppet/ngs-rnaseq-data-hiera-aws.yaml",
                     "puppet apply --verbose --parser future /tmp/btp-module-velvet/datasets/btp.pp --hiera_config=/etc/puppet/ngs-denovo-data-hiera-aws.yaml",
                     "#########",
                     "# Manuals",
                     "#########",
                     "su trainee -c \"curl -o /home/trainee/Desktop/trainee_handout.pdf http://bpa-csiro-workshops.github.io/btp-workshop-ngs/pdfs-latest/trainee_handout.pdf\"",
                     "# Set Trainee Credentials",
                     {
                       "Fn::Join": [ "", [
                       "echo -e \"trainee:",
                       { "Ref" : "TraineePassword" },
                       "\" | chpasswd"
                       ] ]
                     }
                     ] ] } }
      }
    },

    "BTPSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access via port 22",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp",
          "FromPort" : "22",
          "ToPort" : "22",
          "CidrIp" : { "Ref" : "SSHLocation"}
        } ]
      }
    }
  },

  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "BTPInstance" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "BTPInstance", "AvailabilityZone" ] }
    },
    "PublicDNS" : {
      "Description" : "Public DNSName of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "BTPInstance", "PublicDnsName" ] }
    },
    "PublicIP" : {
      "Description" : "Public IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "BTPInstance", "PublicIp" ] }
    }
  }
}
